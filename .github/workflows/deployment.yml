name: ref-logistics Deployment

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  ssh-ec2:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install expect
        run: sudo apt-get install -y expect

      - name: Deploy to server
        env:
          SSH_PASSWORD: ${{ secrets.REF_PASSWORD }}
        run: |
          expect <<EOF
          spawn ssh ${{ secrets.REF_HOST }}@${{ secrets.REF_HOST }} "mkdir -p /home/ec2-user/test"
          expect "password:"
          send "${{ secrets.REF_PASSWORD }}\r"
          expect eof
          EOF

      # - name: Deploy to Server
      #   env:
      #     HOST: ${{ secrets.REF_HOST }}
      #     USERNAME: ${{ secrets.REF_USER }}
      #     PASSWORD: ${{ secrets.REF_PASSWORD }}
        
      #   run: |
      #     # Install SSH client
      #     sudo apt-get install -y openssh-client

      #     # Clone or update repository
      #     if [ -d "ref-logistics-app-sdk" ]; then
      #       echo "Repository already exists, cleaning up"
      #       cd ./ref-logistics-app-sdk && docker-compose down && sudo rm -rf ./../ref-logistics-app-sdk
      #     else
      #       echo "Cloning repository"
      #       cd /home/ec2-user && git clone -b develop https://github.com/Dishab-kaushal/ref-logistics-app-sdk.git && cd ref-logistics-app-sdk && git submodule init && git submodule update --remote --recursive
      #     fi
          

      # - name: ref-logistics Deployment
      #   env:
      #     HOST: ${{ secrets.REF_HOST }}
      #     USERNAME: ${{ secrets.REF_USER }}
      #     PASSWORD: ${{ secrets.REF_PASSWORD }}
      #   run: |
      #     cd ./ref-logistics-app-sdk
      #     sudo docker-compose up -d --build
      #     echo "deployment completed"




